definitions:
  user.User:
    properties:
      email:
        type: string
      fname:
        type: string
      id:
        type: integer
      lname:
        type: string
      password:
        type: string
      tel:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  user.resetPass:
    properties:
      newpassword:
        type: string
      password:
        type: string
    type: object
  user.userLogin:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/login:
    post:
      consumes:
      - application/json
      description: Post User
      parameters:
      - description: Login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/user.userLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Login
  /api/v1/user:
    get:
      consumes:
      - application/json
      description: Get User
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.User'
            type: array
      summary: Get all user
  /api/v1/user/create:
    post:
      consumes:
      - application/json
      description: Post User
      parameters:
      - description: create user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Create user
  /api/v1/user/me:
    get:
      consumes:
      - application/json
      description: Get User
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.User'
            type: array
      summary: Get user
    put:
      consumes:
      - application/json
      description: Put User
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Update user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Update user
  /api/v1/user/resetpassword:
    patch:
      consumes:
      - application/json
      description: Patch resetPass
      parameters:
      - description: reset password
        in: body
        name: password
        required: true
        schema:
          $ref: '#/definitions/user.resetPass'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Reset password
swagger: "2.0"
